apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: quarkus-camel-template
  title: Camel Quarkus Application
  description: Create a Camel Quarkus application.
  tags:
    - recommended
    - quarkus
    - camel
    - microservice
    - maven

spec:
  owner: rhdh
  type: service
# these are the steps which are rendered in the frontend with the form input
  parameters:
    - title: Provide information about the new component
      required:
        - orgName
        - owner
        - system
        - port
      properties:
        orgName:
          title: Organization Name
          type: string
        description: 
          title: Description
          type: string
          description: Help others understand what the component is for.
        owner:
          title: Owner
          type: string
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind:
                - Group
                - User
        system:
          title: System
          type: string
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind:
                - System
        port:
          title: Port
          type: Number
          default: 8080
          description: Override the port exposed for the application
    - title: Provide information about Java metadata
      required:
        - groupId
        - artifactId
        - version
        - javaPackageName
      properties:
        groupId:
          title: Group ID
          type: string
          default: mx.redhat
          description: Maven Group ID eg (mx.redhat)
        artifactId:
          title: Artifact ID
          type: string
          default: myapp
          description: Maven Artifact ID
        version:
          title: Version
          type: string
          default: 1.0.0-SNAPSHOT
          description: Maven Artifact Version
        javaPackageName:
          title: Java Package Name
          type: string
          default: mx.redhat.myapp
          description: Name for the JAva Package (e.g. mx.redhat.myapp) should match GroupID and Artifact ID.
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
#here are the steps that are executed in series in the scaffolder backend
  steps:
    - id: template 
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutTemplating:
          - .github/workflows/*
        values:
          orgName: ${{ parameters.orgName }}
          owner: ${{ parameters.owner }}
          system: ${{ parameters.system }}
          applicationType: api
          description: ${{ parameters.description }}
          port: ${{ parementers.port }}
          groupId: ${{ parameters.groupId }}
          artifactId: ${{ parameters.artifactId }}
          version: ${{ parameters.version }}
          javaPackageName: ${{ parameters.javaPackageName }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          host: ${{ parameters.repo.host }}
          destination_own: ${{ parameters.repo.owner }}

    
    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}
        defaultBranch: main

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Source Code Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open Component in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}